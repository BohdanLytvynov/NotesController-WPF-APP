<Application x:Class="Notes_Controller.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Notes_Controller"
             xmlns:m="clr-namespace:Models;assembly=Models"
             xmlns:conlog ="clr-namespace:LogModels;assembly=LogModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="Views\MainWindow.xaml">
    <Application.Resources>

        <!--ListViewItemStyle-->

        <Style TargetType="{x:Type ListViewItem}"
               >
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static 
                    SystemColors.HighlightBrushKey}"
                                 Color="#68a986"/>
                <SolidColorBrush x:Key=
                 "{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                 Color="#68a986"/>
            </Style.Resources>
        </Style>

        <!--ListViewItemStyle-->

        <!--Colors-->
        <Color x:Key="GridSpliterColorInit">#330570</Color>

        <Color x:Key="GridSpliterColorFocused">#ffae40
            </Color>

        <Color x:Key="ThumbColorInit">#607D9B
        </Color>

        <Color x:Key="ThumbColorFocused">#A99964
        </Color>
                
        <sys:Double x:Key="DoubleGSPressed">7
        </sys:Double>
        <!---->

            <!--Styles-->
        <Style x:Key="TextBlocks" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="ItemsControl.Foreground"
                        Value="White"/>
            </Style.Setters>
        </Style>


        <Style x:Key="BorderRect" TargetType="Rectangle">
            <Style.Setters>
                <Setter Property="Fill" Value="#330570"/>
            </Style.Setters>
        </Style>

        <Style x:Key="Stack" TargetType="StackPanel">
            <Style.Setters>
                <Setter Property="ItemsControl.FontSize" Value="16"/>
            </Style.Setters>
        </Style>

        <Style x:Key="GridSplitter" TargetType="GridSplitter">
            <Style.Setters>
                
                <Setter Property="ItemsControl.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridSplitter">
                            <Rectangle x:Name="Split"                                
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       Width="{TemplateBinding Width}">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{StaticResource GridSpliterColorInit}"/>
                                </Rectangle.Fill>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <ColorAnimation
                                         Storyboard.TargetName="Split"
                                         Storyboard.TargetProperty= "Fill.Color"
                                                To="{StaticResource GridSpliterColorInit}"
                                                    Duration="0:0:0.20"
                                                />
                                                
                                                <DoubleAnimation
                                                    Storyboard.TargetName="Split"
                                                    Storyboard.TargetProperty="Width"
                                                    To="{Binding ElementName=Split, Path=Width}"
                                                    Duration="0:0:0.20"/>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation
                                         Storyboard.TargetName="Split"
                                         Storyboard.TargetProperty= "Fill.Color"
                                                To="{StaticResource GridSpliterColorFocused}"
                                                    Duration="0:0:0.20"
                                                />

                                                <DoubleAnimation
                                                    Storyboard.TargetName="Split"
                                                    Storyboard.TargetProperty="Width"
                                                    To="{StaticResource DoubleGSPressed}"
                                                    Duration="0:0:0.20"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Rectangle>
                        </ControlTemplate> 
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <!--Scroll Viewers-->

        <!--Colors-->
        <Color x:Key="Thumb0ColorInit">#FF47CDDA
        </Color>

        <Color x:Key="Thumb1ColorInit">#FF061C68
        </Color>

        <Color x:Key="ThumbColor0Over">#FFFFFF4D
        </Color>

        <Color x:Key="ThumbColor1Over">#FFBF5B15
        </Color>
        <!--Colors-->

        <Color x:Key="ButtonInit0">#0094ff
        </Color>

        <Color x:Key="ButtonInit1">#0026ff
        </Color>

        <Color x:Key="ButtonDis0">#c8c8c8
        </Color>

        <Color x:Key="ButtonDis1">#5e5e5e
        </Color>

        <!--Duration-->
        <Duration x:Key="ThumAnimDuration">0:0:0:0
        </Duration>
        <!--Duration-->

        <Style x:Key="Pointer" TargetType="Polygon">
            <Style.Setters>
                <Setter Property="Fill">
                    <Setter.Value>
                        <RadialGradientBrush RadiusX="1" RadiusY="1">
                            <GradientStop Color="{StaticResource Thumb0ColorInit}" Offset="0"/>
                            <GradientStop Color="{StaticResource Thumb1ColorInit}" Offset="1"/>
                        </RadialGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Stroke" Value="#FFDC00FF"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Fill">
                            <Setter.Value>
                                <RadialGradientBrush RadiusX="1" RadiusY="1">
                                    <GradientStop Color="{StaticResource ThumbColor0Over}" Offset="0"/>
                                    <GradientStop Color="{StaticResource ThumbColor1Over}" Offset="1"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke" Value="#FF4900"/>
                        <Setter Property="StrokeThickness" Value="2"/>
                    </Trigger.Setters>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Fill">
                            <Setter.Value>
                                <RadialGradientBrush RadiusX="1" RadiusY="1">
                                    <GradientStop Color="{StaticResource ThumbColor0Over}" Offset="0.4"/>
                                    <GradientStop Color="{StaticResource ThumbColor1Over}" Offset="1"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke" Value="#FF4900"/>
                        <Setter Property="StrokeThickness" Value="2"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#region  Thumb Template-->

        <ControlTemplate x:Key="UthumbTemplate" TargetType="Thumb">
            <Border x:Name="ThumbButton" BorderThickness="1" CornerRadius="10">
                <Border.Background>
                    <RadialGradientBrush RadiusX="1" RadiusY="1">
                        <GradientStop Color="{StaticResource Thumb0ColorInit}" Offset="0"/>
                        <GradientStop Color="{StaticResource Thumb1ColorInit}" Offset="1"/>
                    </RadialGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="#FFDC00FF"/>
                </Border.BorderBrush>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">

                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[0].Offset"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="0"/>
                                
                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="{StaticResource Thumb0ColorInit}"
                                    />

                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="{StaticResource Thumb1ColorInit}"
                                    />

                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="BorderBrush.Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="#FFDC00FF"/>
                                
                                <ThicknessAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="BorderThickness"
                                    To="1"/>
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="{StaticResource ThumbColor0Over}"
                                    />

                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="{StaticResource ThumbColor1Over}"
                                    />

                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="BorderBrush.Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="#FF4900"/>

                                <ThicknessAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="BorderThickness"
                                    To="2"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>

                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="{StaticResource ThumbColor0Over}"
                                    />

                                <ColorAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="{StaticResource ThumbColor1Over}"
                                    />

                                <DoubleAnimation
                                    Storyboard.TargetName="ThumbButton"
                                    Storyboard.TargetProperty="Background.GradientStops[0].Offset"
                                    Duration="{StaticResource ThumAnimDuration}"
                                    To="0.4"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Border>
        </ControlTemplate>
        <!--#endregion-->
        
        <ControlTemplate x:Key="repeatTransTemplate" TargetType="RepeatButton">
            <Rectangle Fill="Transparent"/>
        </ControlTemplate>

        <ControlTemplate x:Key="plainTemplate" TargetType="RepeatButton">
            <Grid>
                <ContentPresenter
                    Margin="{TemplateBinding Padding}"/>
            </Grid>
        </ControlTemplate>

        <!--ScrollViewer Main-->
        <ControlTemplate x:Key="VScrollBarTemplate" TargetType="ScrollBar">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="Black" BorderThickness="1"
                        Background="CadetBlue" Grid.Row="1">
                    <Track x:Name="PART_Track" IsDirectionReversed="True">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand"
                                          Template="{StaticResource repeatTransTemplate}"/>
                        </Track.DecreaseRepeatButton>

                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand"
                                          Template="{StaticResource repeatTransTemplate}"/>
                        </Track.IncreaseRepeatButton>

                        <Track.Thumb>
                            <Thumb Template="{StaticResource UthumbTemplate}"/>
                        </Track.Thumb>
                    </Track>
                </Border>

                <Viewbox x:Name="Up" Grid.Row="0">
                    <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                  Template="{StaticResource plainTemplate}">
                        <Polygon Style="{StaticResource Pointer}" 
                                 x:Name="UpPtr" Points="0,50, 25, 10, 50, 50, 25, 40"/>


                    </RepeatButton>
                </Viewbox>

                <Viewbox x:Name="Down" Grid.Row="2">
                    <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                                  Template="{StaticResource plainTemplate}">
                        <Polygon Style="{StaticResource Pointer}" 
                                 x:Name="DownPtr" Points="0,50, 25, 10, 50, 50, 25, 40">
                            <Polygon.RenderTransform>
                                <RotateTransform Angle="180" CenterX="25" CenterY="25"/>
                            </Polygon.RenderTransform>
                        </Polygon>
                    </RepeatButton>
                </Viewbox>

            </Grid>
        </ControlTemplate>

        <!--ScrollViewerHorizontal-->
        <ControlTemplate x:Key="HScrollBarTemplate" TargetType="ScrollBar">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border BorderBrush="Black" BorderThickness="1"
                        Background="CadetBlue" Grid.Column="1">
                    <Track x:Name="PART_Track" IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand"
                                          Template="{StaticResource repeatTransTemplate}"/>
                        </Track.DecreaseRepeatButton>

                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand"
                                          Template="{StaticResource repeatTransTemplate}"/>
                        </Track.IncreaseRepeatButton>

                        <Track.Thumb>
                            <Thumb Template="{StaticResource UthumbTemplate}"/>
                        </Track.Thumb>
                    </Track>
                </Border>

                <Viewbox x:Name="Left" Grid.Column="0">
                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                  Template="{StaticResource plainTemplate}">
                        <Polygon Style="{StaticResource Pointer}" 
                                 x:Name="LeftPtr" Points="0,50, 25, 10, 50, 50, 25, 40">
                            <Polygon.RenderTransform>
                                <RotateTransform CenterX="25" CenterY="25" Angle="-90"/>
                            </Polygon.RenderTransform>
                        </Polygon>


                    </RepeatButton>
                </Viewbox>

                <Viewbox x:Name="Right" Grid.Column="2">
                    <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}"
                                  Template="{StaticResource plainTemplate}">
                        <Polygon Style="{StaticResource Pointer}" 
                                 x:Name="RightPtr" Points="0,50, 25, 10, 50, 50, 25, 40">
                            <Polygon.RenderTransform>
                                <RotateTransform Angle="90" CenterX="25" CenterY="25"/>
                            </Polygon.RenderTransform>
                        </Polygon>
                    </RepeatButton>
                </Viewbox>

            </Grid>
        </ControlTemplate>
        <!--ScrollViewerHorizontal-->



            <!--ScrollViewer Main-->

        <!--#region ScrollViewerStyle-->
        <Style TargetType="ScrollBar">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Trigger.Setters>
                        <Setter Property="Template" Value="{StaticResource VScrollBarTemplate}"/>
                    </Trigger.Setters>
                </Trigger>

                <Trigger Property="Orientation" Value="Horizontal">
                    <Trigger.Setters>
                        <Setter Property="Template" Value="{StaticResource HScrollBarTemplate}"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->


            <!--Styles-->

        <Style x:Key="InputTable" TargetType="TextBox">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="#FF0026FF"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="CaretBrush" Value="White"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FF474141"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#FF0026FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Note DataTemplate-->
        <DataTemplate DataType="{x:Type m:Note}">
            <Border BorderBrush="#FF0026FF" BorderThickness="2" CornerRadius="8"
                    Margin="10" x:Name="border">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Style="{StaticResource Stack}">
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="SName:" Foreground="White"/>
                                <TextBox x:Name="sname" Text="{Binding Surename,
                            UpdateSourceTrigger=PropertyChanged,
                            Mode=TwoWay}"                            
                                 Margin="3,0"
                                 BorderThickness="2" Style="{StaticResource InputTable}"/>

                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Name:" Foreground="White"/>
                                <TextBox x:Name="name" Text="{Binding Name,
                            UpdateSourceTrigger=PropertyChanged,
                            Mode=TwoWay
                            }"
                                 Margin="3,0" 
                                 BorderThickness="2" Style="{StaticResource InputTable}"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="LName:" Foreground="White"/>
                                <TextBox x:Name="lname" Text="{Binding Lastname,
                            UpdateSourceTrigger=PropertyChanged,
                            Mode=TwoWay
                            }"
                                 Margin="3,0" 
                                 BorderThickness="2" Style="{StaticResource InputTable}"/>
                            </StackPanel>


                        </StackPanel>

                        <StackPanel Orientation="Vertical">

                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Phone:" Foreground="White"/>
                                <TextBox x:Name="phone" Text="{Binding Phone,
                            UpdateSourceTrigger=PropertyChanged,
                            Mode=TwoWay
                            }"
                                 Margin="3,0" 
                                 BorderThickness="2" Style="{StaticResource InputTable}"/>
                            </StackPanel>


                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Adress:" Foreground="White"/>
                                <TextBox x:Name="adress" Text="{Binding Adress,
                            UpdateSourceTrigger=PropertyChanged,
                            Mode=TwoWay
                           }"
                                 Margin="3,0" 
                                 BorderThickness="2" Style="{StaticResource InputTable}"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Desc:" Foreground="White"/>
                                <TextBox x:Name="desc" Text="{Binding Description,
                            UpdateSourceTrigger=PropertyChanged,
                            Mode=TwoWay
                            }"
                                 Margin="3,0" 
                                 BorderThickness="2" Style="{StaticResource InputTable}"/>
                            </StackPanel>
                        </StackPanel>
                        
                    </StackPanel>
                    
                    <TextBlock x:Name="adorner" Visibility="Collapsed"/>
                    <CheckBox x:Name="ConfirmRemove" Visibility="Collapsed" 
                              Content="Please, Confirm Remove?" Foreground="White"
                              FontSize="14" IsChecked="{Binding Remove, 
                        UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsEditable, UpdateSourceTrigger=PropertyChanged}"
                             Value="False">
                    <DataTrigger.Setters>
                        <Setter TargetName="sname" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                        <Setter TargetName="name" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                        <Setter TargetName="lname" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                        <Setter TargetName="phone" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                        <Setter TargetName="adress" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                        <Setter TargetName="desc" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTrigger.Setters>

                </DataTrigger>

                <DataTrigger Binding="{Binding IsEditable, UpdateSourceTrigger=PropertyChanged}"
                             Value="True">

                    <Setter TargetName="sname" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                    <Setter TargetName="name" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                    <Setter TargetName="lname" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                    <Setter TargetName="phone" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                    <Setter TargetName="adress" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                    <Setter TargetName="desc" Property="IsEnabled" Value="{Binding IsEditable, 
                            UpdateSourceTrigger=PropertyChanged}"/>

                </DataTrigger>
                <!--#region Add-->
                    <DataTrigger Binding="{Binding OperationProp,UpdateSourceTrigger=PropertyChanged}"
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="border" Property="Border.Background" 
                                Value="#7F0DDC4F"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="NEW NOTE!!!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="Orange"/>
                        <Setter TargetName="adorner" Property="TextBlock.FontFamily"
                                Value="TimesNewRoman"/>
                        <Setter TargetName="adorner" Property="TextBlock.FontSize"
                                Value="20"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <!--#endregion-->

                <!--#region Edit Common-->
                <DataTrigger Binding="{Binding OperationProp,UpdateSourceTrigger=PropertyChanged}"
                             Value="2">
                    <DataTrigger.Setters>
                        <Setter TargetName="border" Property="ItemsControl.BorderBrush"
                                Value="Orange"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="Note in DB will be updated when Update button is clicked!"/>
                        <Setter TargetName="adorner" Property="TextBlock.FontSize"
                                Value="14"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="Orange"/>
                        <Setter TargetName="adorner" Property="Visibility"
                                Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>
                <!--#endregion-->

                <!--#region Fields for editing visualisation-->
                <DataTrigger Binding="{Binding SNameEdited, UpdateSourceTrigger=PropertyChanged}"
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="sname" Property="ItemsControl.BorderBrush"
                                Value="Orange"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding NameEdited, UpdateSourceTrigger=PropertyChanged}"
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="name" Property="ItemsControl.BorderBrush"
                                Value="Orange"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding LNameEdited, UpdateSourceTrigger=PropertyChanged}"
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="lname" Property="ItemsControl.BorderBrush"
                                Value="Orange"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding PhoneEdited, UpdateSourceTrigger=PropertyChanged}"
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="phone" Property="ItemsControl.BorderBrush"
                                Value="Orange"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding AdressEdited, UpdateSourceTrigger=PropertyChanged}"
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="adress" Property="ItemsControl.BorderBrush"
                                Value="Orange"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding DescEdited, UpdateSourceTrigger=PropertyChanged}"
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="desc" Property="ItemsControl.BorderBrush"
                                Value="Orange"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <!--#endregion-->

                <!--#endregion RemoveNote-->

                <DataTrigger Binding="{Binding Remove, UpdateSourceTrigger=PropertyChanged}"
                             Value="true">
                    <DataTrigger.Setters>
                        <Setter TargetName="border" Property="ItemsControl.Background"
                                Value="#7FF10C0C"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="This Note is marked as (Should be removed)!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground" 
                                Value="Orange"/>
                        <Setter TargetName="adorner" Property="TextBlock.FontSize"
                                Value="14"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="ConfirmRemove" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <!--#endregion-->

                <!--#region Error Validation System Visual Effects -->

                <DataTrigger Binding="{Binding OperationProp, UpdateSourceTrigger=PropertyChanged}" Value="3">
                    <DataTrigger.Setters>
                        <Setter TargetName="border" Property="ItemsControl.BorderBrush"
                                Value="Red"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <!--Error precision Visualizer-->

                <DataTrigger Binding="{Binding SNameError, UpdateSourceTrigger=PropertyChanged}" 
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="sname" 
                                Property="ItemsControl.BorderBrush"
                                Value="red"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="Incorrect input! Check field (SName)!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="OrangeRed"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding NameError, UpdateSourceTrigger=PropertyChanged}" 
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="name" 
                                Property="ItemsControl.BorderBrush"
                                Value="Red"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="Incorrect input! Check field (Name)!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="OrangeRed"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding LNameError, UpdateSourceTrigger=PropertyChanged}" 
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="lname" 
                                Property="ItemsControl.BorderBrush"
                                Value="Red"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="Incorrect input! Check field (LName)!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="OrangeRed"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding PhoneError, UpdateSourceTrigger=PropertyChanged}" 
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="phone" 
                                Property="ItemsControl.BorderBrush"
                                Value="Red"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="Incorrect input! Check field (Phone)!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="OrangeRed"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding AdressError, UpdateSourceTrigger=PropertyChanged}" 
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="adress" 
                                Property="ItemsControl.BorderBrush"
                                Value="Red"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="Incorrect input! Check field (Adress)!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="OrangeRed"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <DataTrigger Binding="{Binding DescError, UpdateSourceTrigger=PropertyChanged}" 
                             Value="1">
                    <DataTrigger.Setters>
                        <Setter TargetName="desc" 
                                Property="ItemsControl.BorderBrush"
                                Value="Red"/>
                        <Setter TargetName="adorner" Property="TextBlock.Text"
                                Value="Incorrect input! Check field (Description)!"/>
                        <Setter TargetName="adorner" Property="TextBlock.Foreground"
                                Value="OrangeRed"/>
                        <Setter TargetName="adorner" Property="Visibility" Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>

                <!--Error Visualizer-->

                    <!--#endregion-->

            </DataTemplate.Triggers>
        </DataTemplate>
        <!--NoteDataTemplate-->
            <!--Http Log-->
        <DataTemplate DataType="{x:Type conlog:HTTPConnectionLog}">
            <Border x:Name="logbord" BorderBrush="Black" BorderThickness="2" >
                <StackPanel Orientation="Vertical" Style="{StaticResource Stack}">
                    <TextBlock Text="{Binding Date, UpdateSourceTrigger=PropertyChanged,
                        Mode=OneWay, StringFormat=Date: {0:dd.mm.yyyy hh:mm tt}}" 
                               x:Name="dt" Foreground="White" FontFamily="Consolas"/>

                    <TextBlock Text="{Binding Code, UpdateSourceTrigger=PropertyChanged,
                        Mode=OneWay, StringFormat=Status_Code: {0}}" 
                               x:Name="cd"/>

                    <TextBlock Text="{Binding RequestType, UpdateSourceTrigger=PropertyChanged,
                        Mode=OneWay, StringFormat=Request_Type: {0}}" 
                               x:Name="rt" Foreground="White" FontFamily="Consolas"/>

                    <TextBlock Text="{Binding Error, UpdateSourceTrigger=PropertyChanged,
                        Mode=OneWay, StringFormat=Error_Message: {0}}"
                               x:Name="em" Foreground="Red" Visibility="Hidden"
                               TextWrapping="WrapWithOverflow" Width="700"/>
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsError, UpdateSourceTrigger=PropertyChanged}"
                             Value="False">
                    <DataTrigger.Setters>
                        <Setter TargetName="logbord" 
                                Property="ItemsControl.BorderBrush" Value="Green"/>
                        <Setter TargetName="cd" Property="ItemsControl.Foreground"
                                Value="YellowGreen"/>
                    </DataTrigger.Setters>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsError,UpdateSourceTrigger=PropertyChanged}"
                             Value="True">
                    <DataTrigger.Setters>
                        <Setter TargetName="logbord" Property="ItemsControl.BorderBrush"
                                Value="OrangeRed"/>
                        <Setter TargetName="cd" Property="ItemsControl.Foreground"
                                Value="Red"/>
                        <Setter TargetName="em" Property="ItemsControl.Visibility"
                                Value="Visible"/>
                    </DataTrigger.Setters>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <!--Http Log-->
            <!--DataTemplate-->


        <!--#region Button Template-->

        <Style x:Key="BorderInit" TargetType="Border">
            <Style.Setters>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="{StaticResource ButtonInit0}"
                                              Offset="0"/>
                                <GradientStop Color="{StaticResource ButtonInit1}"
                                              Offset="1"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="CornerRadius" Value="10"/>
            </Style.Setters>
        </Style>
        
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Style="{StaticResource BorderInit}"
                                >
                            <TextBlock HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontStyle="{TemplateBinding FontStyle}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       x:Name="text" Foreground="White"> 
                                <ContentPresenter 
                                              />
                            </TextBlock>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="text"
                                               Storyboard.TargetProperty="Foreground.Color"
                                                To="White"
                                                Duration="{StaticResource ThumAnimDuration}"
                                                />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                                Duration="{StaticResource ThumAnimDuration}"
                                                To="{StaticResource ButtonInit0}"/>

                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                                Duration="{StaticResource ThumAnimDuration}"
                                                To="{StaticResource ButtonInit1}"/>
                                            <ThicknessAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="BorderThickness"
                                                To="2"
                                                Duration="{StaticResource ThumAnimDuration}"
                                                />
                                            
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation                                               
                                                Storyboard.TargetName="text"
                                                Storyboard.TargetProperty="Foreground.Color"
                                                To="Black"
                                                Duration="{StaticResource ThumAnimDuration}"
                                                />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="BorderBrush.Color"
                                                To="OrangeRed"
                                                Duration="{StaticResource ThumAnimDuration}"/>
                                            
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                                To="{StaticResource ThumbColor0Over}"/>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                                To="{StaticResource ThumbColor1Over}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ThicknessAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="BorderThickness"
                                                To="5"
                                                Duration="{StaticResource ThumAnimDuration}"
                                                />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="BorderBrush.Color"
                                                To="OrangeRed"
                                                Duration="{StaticResource ThumAnimDuration}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="BorderBrush.Color"
                                                To="White"/>

                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                                To="{StaticResource ButtonDis0}"
                                                />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                                To="{StaticResource ButtonDis1}"
                                                />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->


    </Application.Resources>
</Application>
